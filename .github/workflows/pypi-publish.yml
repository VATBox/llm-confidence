name: Publish Python Package to PyPI

on:
  push:
    branches:
      - master  # Or 'main'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      # Check out the latest code
      - name: Check out code
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x  # Change this to your desired Python version

      # Install dependencies including bump2version
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine bump2version

      # Set up Git identity
      - name: Configure Git
        run: |
          git config --local user.email "github-actions@github.com"
          git config --local user.name "GitHub Actions"

      # Automatically bump the patch version
      - name: Bump version and commit
        run: |
          bump2version patch  # Or 'minor' or 'major' if necessary
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Push the changes to a new branch
      - name: Push to branch
        run: |
          git checkout -b bump-version-${{ github.sha }}
          git push origin bump-version-${{ github.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Create a pull request
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: bump-version-${{ github.sha }}
          commit-message: "Bump version to ${{ steps.bump2version.outputs.new_version }}"
          title: "Version Bump: ${{ steps.bump2version.outputs.new_version }}"
          body: "This PR bumps the version to ${{ steps.bump2version.outputs.new_version }}."
          base: master
          branch-name: bump-version-${{ github.sha }}

      # Build the package
      - name: Build the package
        run: |
          python setup.py sdist bdist_wheel

      # Publish to PyPI
      - name: Publish package to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload dist/*
